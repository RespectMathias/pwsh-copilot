# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches:
      - main

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  publish-npm:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Setup .NET 8
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Build self-contained Windows exe
      - name: Build pwsh.exe
        run: |
          dotnet publish src/pwsh-copilot.csproj \
            -c Release \
            -r win-x64 \
            -p:PublishSingleFile=true \
            -p:SelfContained=true \
            -p:EnableCompressionInSingleFile=true \
            -p:DebugType=none \
            -o dist
          mv dist/pwsh-copilot.exe pwsh.exe

      # Setup Node for publish
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      # Get current npm version and bump it
      - name: Bump npm version
        run: |
          CURRENT_VERSION=$(curl -s https://registry.npmjs.org/pwsh-copilot/latest | jq -r '.version' 2>/dev/null || echo "0.0.0")
          echo "Current published version: $CURRENT_VERSION"
          npm version $CURRENT_VERSION --no-git-tag-version --allow-same-version
          npm version patch --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"

      # Publish to npm
      - name: Publish package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public
